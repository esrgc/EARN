@using ESRGC.DLLR.EARN.Domain.Model
@using PagedList;
@using PagedList.Mvc;
@model PagedList.PagedList<Partnership>
@{
  ViewBag.Title = "Partnerships";
  ViewBag.Header = "Partnerships";
}

@section header{
  <div class="container">
    <header class="page-header">
      <h3>@ViewBag.Header <i class="glyphicon glyphicon-link"></i></h3>
      @*<ul class="breadcrumb">
                <li><a href="@Url.Action("index", "Home")">Home</a></li>
                <li class="active">@ViewBag.Header</li>
            </ul>*@
    </header>
  </div>
}

@section scripts {
  <script src="~/Client/jsLib/typeahead.js/typeahead.min.js"></script>
  <script type="text/javascript">
    var startup = function() {
      $('#tagInput').typeahead({
        name: 'tagSearch',
        prefetch: {
          url: '/DLLR/EARN/tag/tags',
          ttl: 1
        },
        limit: 20
      });
    };
  </script>
}
@{
  var filters = ViewBag.filters as Dictionary<string, object> ?? new Dictionary<string, object>();
  var currentTags = filters.ContainsKey("tags") ? filters["tags"] as List<string> : new List<string>();
  var returnUrl = Url.Action("Index");
  ViewBag.returnUrl = returnUrl;
  var currentProfile = ViewBag.currentProfile as Profile;
  var statusList = Html.getPartnershipStatusList();
}
<div class="container">
  <div class="row">
    <form class="form-horizontal" method="post" action="@Url.Action("Index")" id="partnershipForm">

      <div class="col-md-8">
        <div class="form-group">
          <div class="col-sm-12">
            <div class="input-group">
              <span class="input-group-addon" title="partnership"><i class="fa fa-search"></i></span>
              <input type="text" id="partnership-name" class="form-control" placeholder="Enter partnership name"
                name="name" value="@ViewBag.name" />
            </div>
          </div>
          <div class="col-sm-4">
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-12">
            <div class="input-group">
              <span class="input-group-addon" title="Tags"><i class="fa fa-tag"></i></span>
              <input id="tagInput" name="tags"
                class="form-control"
                type="text"
                placeholder="e.g. MS Office, computer skills, etc." />
            </div>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-12">
            <div class="input-group">
              <span class="input-group-addon" title="Tags"><i class="fa fa-clock-o"></i></span>
              @Html.DropDownList("status",
                                new SelectList(statusList),
                                new {
                                  @class = "form-control",
                                  placeholder = "Status"
                                })
            </div>
          </div>
        </div>
        
        <div class="form-group">
          <div class="col-sm-12">
            <div class="post tag-list-holder" id="keywords">
              <a id="clearSearchLink" class="link-icon pull-right" href="@Url.Action("Index")">Clear&nbsp;<i class="fa fa-times">
              </i>
              </a>
              <div class="inline-container tag-list">
                @foreach (var i in currentTags) { 
                  <div class="tag matched-tag">
                    <span class="label label-default">
                      @i&nbsp;
                      <a data-value="@i" 
                          href="@Url.RemoveSearchFilter("Index", filters, "tags", i)">
                        <i class="fa fa-times"></i>
                      </a>
                    </span>
                  </div>
                }
              </div>
              <div class="clear"></div>
            </div>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-12">
            <div class="help-block"><span id="statusText" class="text-warning text-center"></span></div>
          </div>
        </div>
        <div id="hiddenInputHolder">
          @foreach (var i in currentTags) { 
            <input type="hidden" value="@i" name="tags" />
          }
        </div>

      </div>
      <div class="col-md-4">
        <input type="submit" class="btn btn-primary" value="Search" />
        <div class="text-info transparent-placeholder-panel">
          <strong>Tips!</strong>&nbsp;
        <small>Enter tags to focus search results to the partnerships that best match your needs and interests.</small>
          <small>Common tags include <strong>job sector titles</strong>
            and any <strong>education, training, certifications</strong> or <strong>skills requirements</strong>
            or <strong>offerings</strong>.
          </small>
        </div>
      </div>
    </form>
  </div>
  <div class="row">
    <div class="col-sm-12">
      <div class="window-panel">
        <div class="window-panel-title">
          <strong>Available Partnerships</strong>
        </div>

        <div class="window-panel-content">
          @if (Model.Count() == 0) {
            <p>There are currently no partnerships available or matched your search criteria.</p>
          }
          else {
            if (Model.PageCount > 1) {
            @Html.PagedListPager(
                    Model,
                    page => Url.AddSearchFilter("Index", filters, "page", page.ToString()),
                    PagedListRenderOptions.OnlyShowFivePagesAtATime)}
            <div class="" id="partnershipList">
              <ul class="list-group">
                @foreach (var p in Model) {
                  <li class="list-group-item">
                    @Html.Partial("partnershipWithActionPartial", p)
                  </li>
                }
              </ul>
            </div>
                if (Model.PageCount > 1) {
            @Html.PagedListPager(
                  Model,
                  page => Url.AddSearchFilter("Index", filters, "page", page.ToString()),
                  PagedListRenderOptions.OnlyShowFivePagesAtATime)}
          }
        </div>
      </div>
    </div>
  </div>
</div>
