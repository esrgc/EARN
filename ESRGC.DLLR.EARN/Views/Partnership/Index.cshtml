@using ESRGC.DLLR.EARN.Domain.Model
@using PagedList;
@using PagedList.Mvc;
@model PagedList.PagedList<Partnership>
@{
    ViewBag.Title = "Partnerships";
    ViewBag.Header = "Partnerships Search";
}

@section header{
    <div class="container">
        <header class="page-header">
            <h3>@ViewBag.Header <i class="glyphicon glyphicon-link"></i></h3>
            @*<ul class="breadcrumb">
                <li><a href="@Url.Action("index", "Home")">Home</a></li>
                <li class="active">@ViewBag.Header</li>
            </ul>*@
        </header>
    </div>
}

@section scripts {

}
@{
    var filters = ViewBag.filters as Dictionary<string, object> ?? new Dictionary<string, object>();
    var returnUrl = Url.Action("Index");
    var currentProfile = ViewBag.currentProfile as Profile;
}
<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <div class="window-panel">
                <div class="window-panel-title">
                    <strong>Available Partnerships</strong>
                </div>

                <div class="window-panel-content">
                    @if (Model.Count() == 0) {
                        <p>There's current no partnerships available.</p>
                    }
                    else {
                        if (Model.PageCount > 1) {
                        @Html.PagedListPager(
                            Model,
                            page => Url.AddSearchFilter("Basic", filters, "page", page.ToString()),
                            PagedListRenderOptions.OnlyShowFivePagesAtATime
                        )}
                        <div class="placeholder">
                            <ul class="list-group">
                                @foreach (var p in Model) {
                                    var partners = p.PartnershipDetails.Count();
                                    <li class="list-group-item">
                                        <small class="pull-right">Last edited: @Html.TimeSpan(p.LastUpdate)</small>
                                        @if (currentProfile.isNewToPartnership(p.PartnershipID)) {
                                            <a href="@Url.Action("View", "Partnership", new { p.PartnershipID, returnUrl })">
                                                <strong>@p.Name</strong>
                                            </a>
                                        }
                                        else {
                                            <a href="@Url.Action("Detail", "Partnership", new { p.PartnershipID, returnUrl })">
                                                <strong>@p.Name</strong>
                                            </a>
                                        }
                                        @switch (p.Status) {
                                            case "Initiating":
                                            <span class="text-danger">(@p.Status)</span>
                                                break;
                                            case "Partnering/drafting proposal":
                                            <span class="text-warning">(@p.Status)</span>
                                                break;
                                            case "Partnered/proposed":
                                            <span class="text-success">(@p.Status)</span>
                                                break;
                                        }

                                        <p class="text-muted">@p.Description</p>
                                        <span>Grant&nbsp;</span>
                                        @switch (p.GrantStatus) {
                                            case "Pre-draft":
                                            <span class="text-danger"><i class="fa fa-minus-circle"></i>&nbsp;@p.GrantStatus</span>
                                                break;
                                            case "Drafting":
                                            <span class="text-warning"><i class="fa fa-pencil"></i>&nbsp;@p.GrantStatus</span>
                                                break;
                                            case "Submitted":
                                            <span class="text-info"><i class="fa fa-check"></i>&nbsp;@p.GrantStatus</span>
                                                break;
                                            case "Awarded":
                                            <span class="text-success"><i class="fa fa-check-circle"></i>&nbsp;@p.GrantStatus</span>
                                                break;
                                        }
                                        <span class="badge">Participant(s) @partners</span>
                                        <br />
                                        @if (!currentProfile.isNewToPartnership(p.PartnershipID)) {
                                            if (currentProfile.isOwnerOfPartnership(p.PartnershipID)) { 
                                            <span class="label label-danger">Owner</span>
                                            }
                                            else {
                                            <span class="label label-success"><i class="fa fa-check"></i>&nbsp;Partnered</span>
                                            }
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                                if (Model.PageCount > 1) {
                        @Html.PagedListPager(
                            Model,
                            page => Url.AddSearchFilter("Basic", filters, "page", page.ToString()),
                            PagedListRenderOptions.OnlyShowFivePagesAtATime
                        )}
                    }
                </div>
            </div>
        </div>
    </div>
</div>
